@import '../variables.css';

.navWrapper {
	margin-bottom: 1.5rem;
}

ul.menuBar {
	display: grid;
	grid-auto-columns: 1fr;
	grid-auto-flow: column;
	align-items: center;
	list-style: none;
	margin: 0 auto;
	padding: 0;
	min-width: 24rem;
	width: max-content;
}

button.menuItem {
	background-color: var( --color-white );
	border: none;
	/* TODO: we need to standardize how this color fits in the app variables */
	border-bottom: 4px solid #f0f0f0;
	position: relative;

	/* We want the buttons to stay the same height/width regardless of whether the report an issue
	button is a dropdown or a plain button. To do this, we are setting fixed dimensions, and then
	placing in the center with flex placements. */
	display: flex;
	flex-direction: row;
	align-items: center;
	justify-content: center;
	width: 100%;
	height: 3rem;
	/* The little bit of left/right padding is for extreme mobile cases */
	padding: 0 0.25rem;
}

/* For small mobile devices, we can just take up the full space, and force the button contents
to adapt. For the current size of the menu bar, and with the dropped plus icon, we can support all the way
down to 320px wide screens! This seems preferable for now than redesigning an entire mobile-version navbar.
If we need to in the future, we can implement that. */
@media only screen and ( max-width: 24rem ) {
	ul.menuBar {
		min-width: 0;
		width: 100%;
	}

	.plusIcon {
		display: none;
	}
}

button.menuItem:hover {
	color: var( --color-primary );
}

button.menuItem:hover path {
	fill: var( --color-primary );
}

button.menuItem:active {
	color: var( --color-primary-dark );
}

button.menuItem:active path {
	fill: var( --color-primary-dark );
}

button.menuItem[aria-current='page'] {
	border-bottom: 4px solid var( --color-primary );
}

button.menuItem:focus-visible {
	outline: none;
}

button.menuItem:focus-visible .menuItemLabel {
	outline: 2px solid var( --color-primary );
	outline-offset: 4px;
}

.menuItemLabel {
	display: flex;
	flex-direction: row;
	align-items: center;
	font-weight: 500;
	height: 1.5rem;
}
